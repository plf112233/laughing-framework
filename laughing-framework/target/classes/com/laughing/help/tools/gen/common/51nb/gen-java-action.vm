package ${thisPackage};

import com.enniu.cloud.service.common.exception.api.dto.VoidResponse;
import com.laughing.help.biz.common.PageResponse;
import com.laughing.help.biz.common.Result;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import ${aoFullName};
import ${voFullClassName};
import ${queryFullClassName};
import javax.validation.constraints.NotNull;

/**
* @author laughing-framework
* @date 创建时间：
* @describe this file is auto generate by laughing-framework.
*/
@RestController
@RequestMapping(value = "${baseActionTarget}", produces = "application/json")
@Api("${actionContext}相关api}.")
public class ${thisClassName} {
	private static final Logger logger = LoggerFactory.getLogger(${thisClassName}.class);

	@Autowired
	private ${aoClassName} ${aoBeanName};


	@ApiOperation(value = "分页查询")
	@RequestMapping(value = "/queryListPage", method = RequestMethod.POST)
	public PageResponse<${voSimpleClassName}> queryListPage(@RequestBody ${querySimpleClassName} ${querySimpleParam}) {
		logger.info("start ${actionContext} query${className}ListPage  data=[{}]", ${querySimpleParam});
    	PageResponse<${voSimpleClassName}> pageResponse = ${aoBeanName}.listByPage(${querySimpleParam});
		logger.info("end ${actionContext} query${className}ListPage ${actionContext} success");
		return pageResponse;
	}

	@ApiOperation(value = "保存")
	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public Result save(@RequestBody ${voSimpleClassName} ${voSimpleParam}) {
		Result result = new Result();
		try{
			logger.info("start save ${actionContext} data=[{}]", ${voSimpleParam});
			${aoBeanName}.insert(${voSimpleParam});
			result.setSuccess(true);
			logger.info("end save ${actionContext} success");
		}catch(Exception e){
			result.setResultMsg(e.getMessage());
		}
		return result;
	}

	@ApiOperation(value = "删除")
	@DeleteMapping("/{${idNameProperty}}")
	@RequestMapping(value = "/delete/{${idNameProperty}}", method = RequestMethod.GET)
	public Result delete(@NotNull @PathVariable("${idNameProperty}") ${idTypeUpper} ${idNameProperty}) {
		Result result = new Result();
		try{
			logger.info("start delete ${idNameProperty}= {}", ${idNameProperty});
			int deleteNum = ${aoBeanName}.delete(${idNameProperty});
			result.setSuccess(true);
			logger.info("end delete ${actionContext} success deleteNum:{} ", deleteNum);
		}catch(Exception e){
			result.setResultMsg(e.getMessage());
		}
		return result;
	}

	@ApiOperation(value = "更新")
	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public Result update(@RequestBody ${voSimpleClassName} ${voSimpleParam}) {
		Result result = new Result();
		try{
			logger.info("start update ${actionContext} data=[{}]", ${voSimpleParam});
			${aoBeanName}.update(${voSimpleParam});
			result.setSuccess(true);
			logger.info("end update ${actionContext} success");
		}catch(Exception e){
			result.setResultMsg(e.getMessage());
		}
		return result;
	}

	@ApiOperation(value = "根据id搜索数据")
	@DeleteMapping("/{${idNameProperty}}")
	@RequestMapping(value = "/queryById/{${idNameProperty}}", method = RequestMethod.GET)
	public ${voSimpleClassName} queryById(@NotNull @PathVariable("${idNameProperty}") ${idTypeUpper} ${idNameProperty}) {
		logger.info("start queryById ${idNameProperty}= {}", ${idNameProperty});
		${voSimpleClassName} ${voSimpleParam} = ${aoBeanName}.queryById(${idNameProperty});
		logger.info("end queryById  success ");
		return ${voSimpleParam};
	}


}